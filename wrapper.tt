[%- DEFAULT
	arch    = ['any']
	license = ['PerlArtistic', 'GPL']
	options = ['!emptydirs']
-%]
# Contributor: [% packager %]
# Generator  : CPANPLUS::Dist::Arch [% version %]
pkgname='[% pkgname %][% IF vcs %]-[% vcs %][% END %]'
pkgver='[% UNLESS vcs %][% pkgver %][% ELSE %][% datepkgver %][% END %]'
pkgrel='[% pkgrel %]'
pkgdesc="[% pkgdesc %]"
arch=('[% arch.join('\' \'') %]')
license=('[% license.join('\' \'') %]')
options=('[% options.join('\' \'') %]')
depends=([% depends %])
[% IF provides -%]provides=('[% provides.join('\' \'') %]')[%- END %]
url='[% url %]'
[% UNLESS vcs %]
source=('[% source %]')
md5sums=('[% md5sums %]')
[% END -%]

build() {
  DIST_DIR="${srcdir}/[% distdir %]"
  export PERL_MM_USE_DEFAULT=1
  {
[% IF vcs == 'git' -%]
	if [ -d $DIST_DIR ] ; then
		cd $DIST_DIR
		perl Build clean
		git remote update &&
    	git checkout orgin/master
	else
		git clone [% vcs_uri %] $DIST_DIR
	fi
[% END -%]
	cd "$DIST_DIR" &&
[% IF is_makemaker -%]
    perl Makefile.PL INSTALLDIRS=vendor &&
    make &&
    [%- IF skiptest -%]make test &&[%- END %]
    make DESTDIR="$pkgdir" install;
[% END -%]
[%- IF is_modulebuild -%]
    perl Build.PL --installdirs=vendor --destdir="$pkgdir" &&
    perl Build &&
    [%- IF skiptest -%]perl Build test &&[%- END %]
    perl Build install;
[% END -%]
  } || return 1;

  find "$pkgdir" -name .packlist -o -name perllocal.pod -delete
}
